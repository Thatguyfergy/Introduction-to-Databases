CREATE TABLE USER_ACCOUNT(
UID INT NOT NULL,
Name VARCHAR(50),
DOB DATE,
Gender CHAR(1),
PRIMARY KEY(UID),
);

CREATE TABLE MALL(
MID INT NOT NULL,
Address VARCHAR(100),
NumShops INT,
PRIMARY KEY(MID),
);

CREATE TABLE COMPLAINT(
CID INT NOT NULL,
UID INT,
Status VARCHAR(50),
Text VARCHAR(200),
filedDateTime DATETIME,
PRIMARY KEY (CID),
FOREIGN KEY (UID) REFERENCES USER_ACCOUNT(UID)
ON UPDATE CASCADE
);


CREATE TABLE COMPLAINTS_ON_RESTAURANT(
CID INT NOT NULL,
UID INT,
Status VARCHAR(50),
Text VARCHAR(200),
OID INT,
filedDateTime DATETIME,
PRIMARY KEY(CID),
FOREIGN KEY (CID) REFERENCES COMPLAINT(CID)
ON UPDATE CASCADE
);


CREATE TABLE COMPLAINTS_ON_SHOP(
CID INT NOT NULL,
SID INT,
UID INT,
Status VARCHAR(50),
Text VARCHAR(200),
filedDateTime DATETIME,
PRIMARY KEY(CID),
FOREIGN KEY (CID) REFERENCES COMPLAINT(CID)
ON UPDATE CASCADE
);


CREATE TABLE SHOP(
SID INT NOT NULL,
Type VARCHAR(50),
MID INT NOT NULL,
PRIMARY KEY(SID),
FOREIGN KEY (MID) REFERENCES MALL(MID)
ON UPDATE CASCADE
);



CREATE TABLE USERSHOP(
SID INT,
UID INT,
amountSpent DECIMAL(18,2),
dateTimeIn DATETIME,
dateTimeOut DATETIME,
PRIMARY KEY (SID, UID),
FOREIGN KEY (SID) REFERENCES SHOP(SID),
FOREIGN KEY (UID) REFERENCES USER_ACCOUNT(UID)
ON UPDATE CASCADE
);


CREATE TABLE RESTAURANT_OUTLET(
OID INT NOT NULL,
MID INT NOT NULL
PRIMARY KEY(OID),
FOREIGN KEY(MID) REFERENCES MALL(MID)
ON UPDATE CASCADE
);


CREATE TABLE USERDINE(
OID INT NOT NULL,
UID INT NOT NULL,
amountSpent DECIMAL(18,2),
dateTimeIn DATETIME,
dateTimeOut DATETIME,
PRIMARY KEY(OID, UID),
FOREIGN KEY(OID) REFERENCES RESTAURANT_OUTLET(OID),
FOREIGN KEY(UID) REFERENCES USER_ACCOUNT(UID)
ON UPDATE CASCADE
);


CREATE TABLE RELATED(
Person1_UID INT NOT NULL,
Person2_UID INT NOT NULL,
Type VARCHAR(50),
PRIMARY KEY(Person1_UID, Person2_UID),
FOREIGN KEY(Person1_UID) REFERENCES USER_ACCOUNT(UID),
FOREIGN KEY(Person2_UID) REFERENCES USER_ACCOUNT(UID)
ON UPDATE CASCADE
);


CREATE TABLE VOUCHER(
VID INT NOT NULL,
Status VARCHAR(50),
expiryDate DATETIME,
dateIssued DATETIME, 
Description VARCHAR(200) NOT NULL,
PRIMARY KEY(VID),
);


CREATE TABLE PURCHASE_VOUCHER(
VID INT NOT NULL,
purchaseDiscount int NOT NULL,
dateTime DATETIME,
UID INT NOT NULL,
PRIMARY KEY(VID),
FOREIGN KEY(VID) REFERENCES VOUCHER(VID),
FOREIGN KEY(UID) REFERENCES USER_ACCOUNT(UID)
ON UPDATE CASCADE
);


CREATE TABLE DINE_VOUCHER(
VID INT NOT NULL,
cashDiscount int NOT NULL,
dateTime DATETIME,
UID INT NOT NULL,
PRIMARY KEY(VID),
FOREIGN KEY(VID) REFERENCES VOUCHER(VID),
FOREIGN KEY(UID) REFERENCES USER_ACCOUNT(UID)
ON UPDATE CASCADE
);


CREATE TABLE GROUP_VOUCHER(
VID INT NOT NULL,
groupSize int NOT NULL,
groupDiscount int NOT NULL,
dateTime DATETIME,
UID INT NOT NULL,
PRIMARY KEY(VID),
FOREIGN KEY(VID) REFERENCES VOUCHER(VID),
FOREIGN KEY(UID) REFERENCES USER_ACCOUNT(UID)
ON UPDATE CASCADE
);


CREATE TABLE PACKAGE_VOUCHER(
VID INT NOT NULL,
packageDiscount INT NOT NULL,
PRIMARY KEY(VID),
FOREIGN KEY(VID) REFERENCES VOUCHER(VID)
ON UPDATE CASCADE
);


CREATE TABLE DAY_PACKAGE(
DID INT NOT NULL,
Description VARCHAR(200),
UID INT NOT NULL,
VID INT NOT NULL,
PRIMARY KEY(DID, UID),
FOREIGN KEY(UID) REFERENCES USER_ACCOUNT(UID),
FOREIGN KEY(VID) REFERENCES PACKAGE_VOUCHER(VID)
ON UPDATE CASCADE
);


CREATE TABLE DAYPACKAGE_HAS_RESTAURANTOUTLET(
DID INT NOT NULL,
OID INT NOT NULL,
UID INT NOT NULL,
PRIMARY KEY (DID, OID),
FOREIGN KEY(DID, UID) REFERENCES DAY_PACKAGE(DID, UID),
FOREIGN KEY(OID) REFERENCES RESTAURANT_OUTLET(OID)
ON UPDATE CASCADE
);


CREATE TABLE MALL_HAS_DAYPACKAGE(
DID INT NOT NULL,
MID INT NOT NULL,
UID INT NOT NULL,
PRIMARY KEY(DID, MID),
FOREIGN KEY(DID, UID) REFERENCES DAY_PACKAGE(DID, UID),
FOREIGN KEY(MID) REFERENCES MALL(MID)
ON UPDATE CASCADE
);


CREATE TABLE MALL_MGMT_COMPANY(
MMCID INT NOT NULL,
Address VARCHAR(100),
PRIMARY KEY(MMCID),
);


CREATE TABLE RECOMMENDATION(
NID INT NOT NULL,
UID INT NOT NULL,
MID INT NOT NULL,
validPeriod DATETIME,
dateIssued DATETIME,
PRIMARY KEY(NID),
FOREIGN KEY(UID) REFERENCES USER_ACCOUNT(UID),
FOREIGN KEY(MID) REFERENCES MALL(MID)
ON UPDATE CASCADE
);


CREATE TABLE RESTAURANT_CHAIN(
RID INT NOT NULL,
Address VARCHAR(100),
PRIMARY KEY(RID),
);

